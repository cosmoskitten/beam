/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * License); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply from: project(":").file("build_rules.gradle")
applyJavaNature(artifactId: "beam-sdks-java-maven-archetypes-examples")

description = "Apache Beam :: SDKs :: Java :: Maven Archetypes :: Examples"

// Extract the version from a library:version dependency.
def ver = { return it.substring(1+it.lastIndexOf(':')) }

processResources {
  filter org.apache.tools.ant.filters.ReplaceTokens, tokens: [
    'project.version':  version,
    'bigquery.version': ver(project.library.java.google_api_services_bigquery),
    'google-clients.version': ver(project.library.java.google_api_client),
    'guava.version': ver(project.library.java.guava),
    'hamcrest.version': ver(project.library.java.hamcrest_library),
    'jackson.version': ver(project.library.java.jackson_core),
    'joda.version': ver(project.library.java.joda_time),
    'junit.version': ver(project.library.java.junit),
    'pubsub.version': ver(project.library.java.google_api_services_pubsub),
    'slf4j.version': ver(project.library.java.slf4j_api),
    'spark.version': ver(project.library.java.spark_core),
    'hadoop.version': ver(project.library.java.hadoop_client),
    'mockito.version': ver(project.library.java.mockito_core),
    'maven-compiler-plugin.version': '3.7.0',
    'maven-exec-plugin.version': '1.6.0',
    'maven-jar-plugin.version': '3.0.2',
    'maven-shade-plugin.version': '3.1.0',
    'maven-surefire-plugin.version': '2.20.1'
  ]
}

// The :examples:java main/test sourceSets are used in generation.
evaluationDependsOn(':examples:java')

task generateSources(type: Exec) {
  println "Generating sources for archetype"
  inputs.file './generate-sources.sh'
  inputs.dir project(':examples:java').sourceSets.main.allSource
  //inputs.dir projects.sourceSets.examples.test.allSource
  commandLine './generate-sources.sh'
}

sourceSets {
 main {
  output.dir('src', builtBy: 'generateSources')
 }
}

dependencies {
  shadow project(path: ":examples:java", configuration: "shadow")
}
